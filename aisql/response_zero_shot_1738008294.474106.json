{
  "strategy": "zero_shot",
  "prompt_prefix": "create table actor (\n    actor_id integer primary key,\n    birthDay date not null,\n    first_name varchar(30) not null,\n    last_name varchar(30) not null\n);\n\ncreate table show (\n    show_id integer primary key,\n    rating float not null,\n    title varchar(70) not null,\n    seasons integer not null,\n    yearStart date not null,\n    yearEnd date,\n    genre varchar(30)\n);\n\ncreate table show_actor (\n    actor_id integer,\n    show_id integer,\n    foreign key (actor_id) references actor (actor_id),\n    foreign key (show_id) references show (show_id),\n    primary key (actor_id, show_id)\n);\n\ncreate table actor_emmys (\n    emmy_id integer primary key,\n    actor_id integer,\n    type varchar(50) not null,\n    foreign key (actor_id) references actor (actor_id)\n);\n\ncreate table show_emmys (\n    emmy_id integer primary key,\n    show_id integer,\n    type varchar(50) not null,\n    foreign key (show_id) references show (show_id)\n);\n\ncreate table streaming_service (\n    streaming_id integer primary key,\n    name varchar(50) not null,\n    price float not null,\n    show_id integer,\n    foreign key (show_id) references show (show_id)\n); Give me a sqlite select statement that answers the question. Only respond with sqlite syntax. If there is an error do not expalin it!",
  "questionResults": [
    {
      "question": "Which are the most awarded actors?",
      "sql": "\nSELECT a.actor_id, a.first_name, a.last_name, COUNT(e.emmy_id) AS emmy_count\nFROM actor a\nJOIN actor_emmys e ON a.actor_id = e.actor_id\nGROUP BY a.actor_id\nORDER BY emmy_count DESC;\n",
      "queryRawResponse": "[(8, 'Allison', 'Janney', 4), (10, 'Hannah', 'Waddingham', 1), (9, 'Jason', 'Sudeikis', 1), (7, 'Martin', 'Sheen', 1), (5, 'Andy', 'Samberg', 1), (3, 'Amy', 'Poehler', 1), (2, 'Kristen', 'Bell', 1), (1, 'Ted', 'Danson', 1)]",
      "friendlyResponse": "Allison Janney is the most awarded with 4 awards, followed by Hannah Waddingham, Jason Sudeikis, Martin Sheen, Andy Samberg, Amy Poehler, Kristen Bell, and Ted Danson, each with 1 award.",
      "error": "None"
    },
    {
      "question": "Which are the most awarded tv shows?",
      "sql": "\nSELECT s.title, COUNT(se.emmy_id) AS emmy_count\nFROM show s\nJOIN show_emmys se ON s.show_id = se.show_id\nGROUP BY s.show_id\nORDER BY emmy_count DESC;\n",
      "queryRawResponse": "[('The West Wing', 10), ('Ted Lasso', 7), ('Brooklyn Nine-Nine', 1)]",
      "friendlyResponse": "Sure! Here are some of the most awarded TV shows: \"The West Wing,\" \"Ted Lasso,\" and \"Brooklyn Nine-Nine.\"",
      "error": "None"
    },
    {
      "question": "Which tv shows have lead actors with a large age gap?",
      "sql": "\nSELECT s.title, a1.first_name AS first_lead_name, a1.last_name AS first_lead_last_name,\n       a2.first_name AS second_lead_name, a2.last_name AS second_lead_last_name,\n       ABS(JULIANDAY(a1.birthDay) - JULIANDAY(a2.birthDay)) / 365 AS age_gap_years\nFROM show_actor sa1\nJOIN show_actor sa2 ON sa1.show_id = sa2.show_id AND sa1.actor_id < sa2.actor_id\nJOIN show s ON sa1.show_id = s.show_id\nJOIN actor a1 ON sa1.actor_id = a1.actor_id\nJOIN actor a2 ON sa2.actor_id = a2.actor_id\nWHERE ABS(JULIANDAY(a1.birthDay) - JULIANDAY(a2.birthDay)) / 365 >= 10;\n",
      "queryRawResponse": "[('The Good Place', 'Ted', 'Danson', 'Kristen', 'Bell', 32.57534246575342), ('Brooklyn Nine-Nine', 'Amy', 'Poehler', 'Melissa', 'Fumero', 10.931506849315069), ('The West Wing', 'Martin', 'Sheen', 'Allison', 'Janney', 19.306849315068494)]",
      "friendlyResponse": "Certainly! Some TV shows with lead actors having a noticeable age gap include \"The Good Place\" with Ted Danson and Kristen Bell, \"Brooklyn Nine-Nine\" with Amy Poehler and Melissa Fumero, and \"The West Wing\" with Martin Sheen and Allison Janney.",
      "error": "None"
    },
    {
      "question": "What genre of tv shows are the most awarded?",
      "sql": "ite\nSELECT s.genre, COUNT(se.emmy_id) AS emmy_count\nFROM show s\nJOIN show_emmys se ON s.show_id = se.show_id\nGROUP BY s.genre\nORDER BY emmy_count DESC\nLIMIT 1;\n",
      "queryRawResponse": "[('The Good Place', 'Ted', 'Danson', 'Kristen', 'Bell', 32.57534246575342), ('Brooklyn Nine-Nine', 'Amy', 'Poehler', 'Melissa', 'Fumero', 10.931506849315069), ('The West Wing', 'Martin', 'Sheen', 'Allison', 'Janney', 19.306849315068494)]",
      "friendlyResponse": "Certainly! Some TV shows with lead actors having a noticeable age gap include \"The Good Place\" with Ted Danson and Kristen Bell, \"Brooklyn Nine-Nine\" with Amy Poehler and Melissa Fumero, and \"The West Wing\" with Martin Sheen and Allison Janney.",
      "error": "near \"ite\": syntax error"
    },
    {
      "question": "What is the most common emmy award that was won for actors?",
      "sql": "\nSELECT type, COUNT(*) as count\nFROM actor_emmys\nGROUP BY type\nORDER BY count DESC\nLIMIT 1;\n",
      "queryRawResponse": "[('Outstanding Lead Actor in a Comedy Series', 2)]",
      "friendlyResponse": "The most common Emmy Award for actors is \"Outstanding Lead Actor in a Comedy Series.\"",
      "error": "None"
    },
    {
      "question": "What is the most common emmy award that was won for tv shows?",
      "sql": "\nSELECT type, COUNT(*) as count \nFROM show_emmys \nGROUP BY type \nORDER BY count DESC \nLIMIT 1;\n",
      "queryRawResponse": "[('Outstanding Writing for a Drama Series', 1)]",
      "friendlyResponse": "The most common Emmy Award won for TV shows is \"Outstanding Writing for a Drama Series.\"",
      "error": "None"
    },
    {
      "question": "Which tv shows have the most awarded actors?",
      "sql": "\nSELECT s.title, COUNT(ae.emmy_id) AS emmy_count\nFROM show s\nJOIN show_actor sa ON s.show_id = sa.show_id\nJOIN actor_emmys ae ON sa.actor_id = ae.actor_id\nGROUP BY s.show_id\nORDER BY emmy_count DESC\nLIMIT 1;\n",
      "queryRawResponse": "[('The West Wing', 5)]",
      "friendlyResponse": "\"The West Wing\" with 5 awarded actors.",
      "error": "None"
    },
    {
      "question": "What is the oldest tv show in the database?",
      "sql": "\nSELECT title, yearStart FROM show ORDER BY yearStart ASC LIMIT 1;\n",
      "queryRawResponse": "[('The West Wing', '1999-09-22')]",
      "friendlyResponse": "The oldest TV show in the database is \"The West Wing,\" which premiered on September 22, 1999.",
      "error": "None"
    }
  ]
}